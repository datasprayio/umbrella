name: Deploy

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: 'Environment'
        required: true
        default: 'staging'
        options:
          - production
          - staging

concurrency:
  group: deploy-${{ github.event.inputs.environment || 'staging' }}

jobs:
  build:
    if: "github.event_name != 'push' || (!contains(github.event.head_commit.message, '[release]') && !contains(github.event.head_commit.message, '[skip deploy]'))"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: 'maven'
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Setup asdf
        uses: asdf-vm/actions/setup@v3
      - name: Setup dst
        run: |
          asdf plugin add dst https://github.com/datasprayio/asdf-dst.git
          asdf install

      - name: Import GPG private key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --yes --no-tty --import
          KEY_ID=$(gpg --list-secret-keys --keyid-format LONG | grep sec | awk '{print $2}' | cut -d'/' -f2)
          echo "default-key $KEY_ID" >> ~/.gnupg/gpg.conf
          echo "use-agent" >> ~/.gnupg/gpg.conf
          export GPG_TTY=$(tty)
      - name: Set up Maven settings.xml
        run: |
          mkdir -p ~/.m2
          cat <<EOF > ~/.m2/settings.xml
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>ossrh</id>
                <username>${{ secrets.OSSRH_USERNAME }}</username>
                <password>${{ secrets.OSSRH_TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF
      - name: Login to DataSpray
        run: |
          dst env login --profile=production ${{ github.event.inputs.environment == 'production' && '--default' || '' }} --apiKey=${{ secrets.DST_PRODUCTION_API_KEY }} --organization=${{ secrets.DST_PRODUCTION_ORG_NAME }} --skipCheck
          dst env login --profile=staging    ${{ github.event.inputs.environment != 'production' && '--default' || '' }} --apiKey=${{ secrets.DST_STAGING_API_KEY }}    --organization=${{ secrets.DST_STAGING_ORG_NAME }}    --skipCheck --endpoint=https://api.staging.dataspray.io

      - name: Maven build
        timeout-minutes: 30
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: mvn clean deploy -P${{ github.event.inputs.environment || 'staging' }} --no-transfer-progress
