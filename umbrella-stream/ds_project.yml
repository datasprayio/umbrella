---
$schema: "https://dataspray.io/project/schema.json"
version: V0.0.0
name: umbrella
namespace: io.dataspray.umbrella
dataFormats:
  - serde: JSON
    name: HttpEventRequest
  - serde: JSON
    name: HttpEventResponse
  - serde: JSON
    name: PingRequest
  - serde: JSON
    name: PingResponse
  - serde: JSON
    name: Rules
  - serde: JSON
    name: Rule
datasprayStores:
  - streams:
      - dataFormatName: "HttpEventRequest"
        name: "http-events"
    name: "default"
dynamoState:
  lsiCount: 1
  gsiCount: 0
javaProcessors:
  - name: "ingester"
    target: DATASPRAY
    hasDynamoState: true
    includeSingleTableLibrary: true
    outputStreams:
      - storeType: DATASPRAY
        storeName: default
        streamName: http-events
    web:
      isPublic: true
      endpoints:
        - name: "nodePing"
          contentTypes: [ "application/json" ]
          method: 'POST'
          path: "/org/{org}/node/ping"
          pathParams:
            - name: org
          headers:
            - name: "Authorization"
              isRequired: true
          requestDataFormatName: PingRequest
          responseDataFormatName: PingResponse
        - name: "httpEvent"
          contentTypes: [ "application/json" ]
          method: 'POST'
          path: "/org/{org}/event/http"
          pathParams:
            - name: org
          headers:
            - name: "Authorization"
              isRequired: true
          requestDataFormatName: HttpEventRequest
          responseDataFormatName: HttpEventResponse
  - name: "controller"
    target: DATASPRAY
    hasDynamoState: true
    includeSingleTableLibrary: true
    web:
      isPublic: true
      endpoints:
        - name: "ruleList"
          contentTypes: [ "application/json" ]
          method: 'GET'
          path: "/org/{org}/rules"
          pathParams:
            - name: org
          headers:
            - name: "Authorization"
              isRequired: true
          responseDataFormatName: Rules
        - name: "ruleSet"
          contentTypes: [ "application/json" ]
          method: 'PUT'
          path: "/org/{org}/rule/{id}"
          pathParams:
            - name: org
            - name: id
          headers:
            - name: "Authorization"
              isRequired: true
          requestDataFormatName: Rule
        - name: "ruleDelete"
          contentTypes: [ "application/json" ]
          method: 'DELETE'
          path: "/org/{org}/rule/{id}"
          pathParams:
            - name: org
            - name: id
          headers:
            - name: "Authorization"
              isRequired: true