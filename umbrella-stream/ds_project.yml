---
$schema: "https://dataspray.io/project/schema.json"
version: V0.0.0
name: umbrella
namespace: io.dataspray.umbrella
dataFormats:
  - name: HttpEvent
    serde: JSON
  - name: CustomEvent
    serde: JSON
  - name: HttpEventRequest
    serde: JSON
  - name: HttpEventResponse
    serde: JSON
  - name: EventRequest
    serde: JSON
  - name: EventResponse
    serde: JSON
  - name: PingRequest
    serde: JSON
  - name: PingResponse
    serde: JSON
  - name: Rules
    serde: JSON
  - name: Rule
    serde: JSON
datasprayStores:
  - name: "ds-store"
    streams:
      - dataFormatName: "HttpEvent"
        name: "http-events"
      - dataFormatName: "CustomEvent"
        name: "custom-events"
dynamoState:
  lsiCount: 1
  gsiCount: 0
javaProcessors:
  - name: "ingester"
    target: DATASPRAY
    hasDynamoState: true
    includeSingleTableLibrary: true
    outputStreams:
      - storeName: ds-store
        storeType: DATASPRAY
        streamName: http-events
      - storeName: ds-store
        storeType: DATASPRAY
        streamName: custom-events
    web:
      isPublic: true
      endpoints:
        - name: "nodePing"
          contentTypes: [ "application/json" ]
          method: POST
          path: "/org/{org}/node/ping"
          pathParams:
            - name: org
          headers:
            - name: "Authorization"
              isRequired: true
          requestDataFormatName: PingRequest
          responseDataFormatName: PingResponse
        - name: "httpEvent"
          contentTypes: [ "application/json" ]
          method: POST
          path: "/org/{org}/event/http"
          pathParams:
            - name: org
          headers:
            - name: "Authorization"
              isRequired: true
          requestDataFormatName: HttpEventRequest
          responseDataFormatName: HttpEventResponse
        - name: "event"
          contentTypes: [ "application/json" ]
          method: POST
          path: "/org/{org}/event/{eventType}"
          pathParams:
            - name: org
            - name: eventType
          headers:
            - name: "Authorization"
              isRequired: true
          requestDataFormatName: EventRequest
          responseDataFormatName: EventResponse
  - name: "controller"
    target: DATASPRAY
    hasDynamoState: true
    includeSingleTableLibrary: true
    web:
      isPublic: true
      endpoints:

        - name: "orgCreate"
          contentTypes: [ "application/json" ]
          method: PUT
          path: "/org/{org}"
          pathParams:
            - name: org
          headers:
            - name: "Authorization"
              isRequired: true
          responseDataFormatName: ApiKey
        - name: "apiKeyCreate"
          contentTypes: [ "application/json" ]
          method: POST
          path: "/org/{org}/apikey"
          pathParams:
            - name: org
          headers:
            - name: "Authorization"
              isRequired: true
          requestDataFormatName: ApiKeyRequest
          responseDataFormatName: ApiKey
        - name: "apiKeyDelete"
          contentTypes: [ "application/json" ]
          method: DELETE
          path: "/org/{org}/apikey"
          pathParams:
            - name: org
          headers:
            - name: "Authorization"
              isRequired: true
          requestDataFormatName: ApiKeyRequest
          responseDataFormatName: ApiKey
        - name: "apiKeyDelete"
          contentTypes: [ "application/json" ]
          method: DELETE
          path: "/org/{org}/apikey"
          pathParams:
            - name: org
          headers:
            - name: "Authorization"
              isRequired: true
          requestDataFormatName: ApiKeyRequest

        - name: "rulesList"
          contentTypes: [ "application/json" ]
          method: GET
          path: "/org/{org}/rules"
          pathParams:
            - name: org
          headers:
            - name: "Authorization"
              isRequired: true
          responseDataFormatName: Rules
        - name: "rulesSet"
          contentTypes: [ "application/json" ]
          method: PUT
          path: "/org/{org}/rules"
          pathParams:
            - name: org
          headers:
            - name: "Authorization"
              isRequired: true
          requestDataFormatName: Rules
