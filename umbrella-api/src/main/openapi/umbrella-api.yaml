openapi: 3.0.3
info:
  title: DataSpray Umbrella Shield API
  version: 0.0.1

servers:
  - url: https://api.umbrella.dataspray.io

security:
  - apikey: [ ]

components:
  securitySchemes:
    apikey:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    PingRequest:
      title: PingRequest
      type: object
      required:
        - nodeId
      properties:
        nodeId:
          $ref: '#/components/schemas/NodeIdentification'
    PingResponse:
      title: PingResponse
      type: object
      required:
        - config
      properties:
        config:
          $ref: '#/components/schemas/Config'
    HttpEventRequest:
      title: HttpEventRequest
      type: object
      required:
        - nodeId
        - currentMode
        - httpMetadata
      properties:
        nodeId:
          $ref: '#/components/schemas/NodeIdentification'
        currentMode:
          $ref: '#/components/schemas/OperationMode'
        httpMetadata:
          $ref: '#/components/schemas/HttpMetadata'
    HttpEventResponse:
      title: HttpEventResponse
      type: object
      required:
        - action
      properties:
        action:
          $ref: '#/components/schemas/HttpAction'
        configRefresh:
          $ref: '#/components/schemas/Config'
    EventRequest:
      title: EventRequest
      type: object
      required:
        - nodeId
        - currentMode
        - key
        - metadata
      properties:
        nodeId:
          $ref: '#/components/schemas/NodeIdentification'
        currentMode:
          $ref: '#/components/schemas/OperationMode'
        key:
          type: string
        metadata:
          type: object
          existingJavaType: 'com.google.common.collect.ImmutableMap<String, String>' # For jsonschema2pojo
          additionalProperties:
            type: string
    EventResponse:
      title: EventResponse
      type: object
      required:
        - action
      properties:
        action:
          $ref: '#/components/schemas/CustomAction'
        configRefresh:
          $ref: '#/components/schemas/Config'
    CustomAction:
      title: CustomAction
      type: object
      existingJavaType: 'com.google.common.collect.ImmutableMap<String, String>' # For jsonschema2pojo
      additionalProperties:
        type: string
    Headers:
      type: object
      existingJavaType: 'com.google.common.collect.ImmutableMap<String, String>' # For jsonschema2pojo
      additionalProperties:
        type: string
    Attributes:
      type: object
      existingJavaType: 'com.google.common.collect.ImmutableMap<String, String>' # For jsonschema2pojo
      additionalProperties:
        type: string
    Cookies:
      type: array
      items:
        title: Cookie
        type: object
        required:
          - name
          - value
        properties:
          name:
            type: string
          value:
            type: string
          maxAge:
            type: integer
            format: int64
          domain:
            type: string
          path:
            type: string
          secure:
            type: boolean
          httpOnly:
            type: boolean
          sameSite:
            type: string
    NodeIdentification:
      type: string
    OperationMode:
      title: OperationMode
      type: string
      enum:
        - BLOCKING
        - MONITOR
        - DISABLED
    HttpAction:
      type: object
      required:
        - requestProcess
      properties:
        requestProcess:
          $ref: '#/components/schemas/RequestProcess'
        responseStatus:
          $ref: '#/components/schemas/ResponseStatus'
        requestMetadata:
          $ref: '#/components/schemas/Attributes'
        responseHeaders:
          $ref: '#/components/schemas/Headers'
        responseCookies:
          $ref: '#/components/schemas/Cookies'
    RequestProcess:
      type: string
      enum:
        - ALLOW
        - BLOCK
    ResponseStatus:
      type: integer
      format: int64
    Config:
      title: Config
      type: object
      required:
        - mode
      properties:
        mode:
          $ref: '#/components/schemas/OperationMode'
        timeoutMs:
          type: integer
          format: int64
        collectAdditionalHeaders:
          type: array
          items:
            type: string
    HttpMetadata:
      title: HttpMetadata
      type: object
      properties:
        ts:
          type: string
          format: date-time
        uri:
          type: string
        method:
          type: string
        proto:
          type: string
        ip:
          type: string
        hXFwdProto:
          type: string
        hCfConnIp:
          type: string
        hTrueClientIp:
          type: string
        hXRealIp:
          type: string
        hFwd:
          type: string
        hXFwdFor:
          type: string
        hVia:
          type: string
        port:
          type: integer
          format: int64
        hXFwdPort:
          type: string
        hXFwdHost:
          type: string
        hXReqWith:
          type: string
        hUserAgent:
          type: string
        hAuthPrefix:
          type: string
        hAuthSize:
          type: integer
          format: int64
        hXReqId:
          type: string
        hAccept:
          type: string
        hAcceptLanguage:
          type: string
        hAcceptCharset:
          type: string
        hAcceptEncoding:
          type: string
        hConnection:
          type: string
        hContentType:
          type: string
        hFrom:
          type: string
        hHost:
          type: string
        hOrigin:
          type: string
        contentLength:
          type: integer
          format: int64
        hPragma:
          type: string
        hReferer:
          type: string
        hSecChDevMem:
          type: string
        hSecChUa:
          type: string
        hSecChUaModel:
          type: string
        hSecChUaFull:
          type: string
        hSecChUaMobile:
          type: string
        hSecChUaPlatform:
          type: string
        hSecChUaArch:
          type: string
        hSecFetchDest:
          type: string
        hSecFetchMode:
          type: string
        hSecFetchSite:
          type: string
        hSecFetchUser:
          type: string
        tlsCipher:
          type: string
        tlsProto:
          type: string
        headerNames:
          type: array
          items:
            type: string
        cookieNames:
          items:
            type: string
        additionalHeaders:
          $ref: '#/components/schemas/Headers'

paths:
  /org/{org}/node/ping:
    post:
      operationId: nodePing
      tags: [ Health ]
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PingRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
  /org/{org}/event/http:
    post:
      operationId: httpEvent
      tags: [ Ingest ]
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HttpEventRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpEventResponse'
  /org/{org}/event/{eventType}:
    post:
      operationId: customEvent
      tags: [ Ingest ]
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
        - name: eventType
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
